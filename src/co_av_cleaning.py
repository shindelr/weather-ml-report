"""author: Robin Shindelmandate: 2025-02-06description: CO Avalanche Data Cleaning"""import pandas as pdimport seaborn as snsimport matplotlib.pyplot as plt# ----------------------------------------------------------------------------# Importdf = pd.read_excel("../data/raw/CO Snow:Avalanche/CAIC_Accident_Data_2023.xlsx")pd.set_option('display.max_columns', 7)df['Fatalities'] = df.Killeddf = df.drop('Killed', axis=1)# ----------------------------------------------------------------------------# Visualizeplt.subplots(figsize=(5, 2.7))sns.catplot(data=df, x='MM', y='TravelMode',             hue='Fatalities', kind='swarm', size=3)plt.xlabel("Month")plt.yticks(rotation=45)plt.ylabel("Travel Mode")plt.title("Reported Avalanches by Travel Mode, Month, and Number of Fatalities")plt.show()plt.subplots(figsize=(8, 2.7))sns.countplot(data=df, x='State')plt.title("Reported Avalanches by State 1951 - 2023")plt.ylabel("Avalanches")plt.show()plt.subplots(figsize=(5, 5))ax = sns.scatterplot(data=df, x='lat', y='lon', hue='Setting', size=3)sns.move_legend(ax, "upper left", bbox_to_anchor=(1, 1))plt.title("Scatterplot of Incidents by Latitude/Longitude")plt.ylabel("Longitude")plt.xlabel("Latitude")plt.show()# ----------------------------------------------------------------------------# Outliers# Fatalitiesdf = df[(df.Fatalities < 10)]# Locationsdf = df[(df.lon < 0) & (df.lat > 0)]df = df[(df.State != 'AK') & (df.State != 'NH')]# Monthsdf = df[(df.MM != 7) & (df.MM != 9)]sns.histplot(data=df, x='Fatalities')plt.title("Distribution of fatalities")plt.show()plt.subplots(figsize=(5, 2.7))sns.catplot(data=df, x='MM', y='TravelMode',             hue='Fatalities', kind='swarm')plt.xlabel("Month")plt.yticks(rotation=45)plt.ylabel("Travel Mode")plt.title("Reported Avalanches by Travel Mode, Month, and Number of Fatalities")plt.show()plt.subplots(figsize=(5, 5))ax = sns.scatterplot(data=df, x='lat', y='lon', hue='Setting')sns.move_legend(ax, "upper left", bbox_to_anchor=(1, 1))plt.title("Scatterplot of Incidents by Latitude/Longitude")plt.ylabel("Longitude")plt.xlabel("Latitude")plt.show()# ----------------------------------------------------------------------------# Data typescats = ['Setting', 'State', 'PrimaryActivity', 'TravelMode', 'Trigger']df[cats] = df[cats].astype('category')# ----------------------------------------------------------------------------# Missing valuesdf = df.drop(['AvyYear', 'Description'], axis=1)df_travel_mode = df[['YYYY', 'MM', 'DD', 'Location', 'Setting', 'State',                  'lat', 'lon', 'PrimaryActivity', 'TravelMode', 'Date',                   'Fatalities']].copy()df_travel_mode = df_travel_mode.dropna()print(df_travel_mode.info())df_trigger_size = df[['YYYY', 'MM', 'DD', 'Location', 'Setting', 'State',                  'lat', 'lon', 'PrimaryActivity', 'Trigger', 'D Size',                   'Date', 'Fatalities']].copy()df_trigger_size = df_trigger_size.dropna()print(df_trigger_size.info())df_all_other = df[['YYYY', 'MM', 'DD', 'Location', 'Setting', 'State',                  'lat', 'lon', 'PrimaryActivity','Date', 'Fatalities']].copy()df_all_other = df_all_other.dropna()print(df_all_other.info())# ----------------------------------------------------------------------------# Write to clean locationdf_travel_mode.to_csv("../data/clean/CO Snow:Avalanche/travel_mode.csv")df_trigger_size.to_csv("../data/clean/CO Snow:Avalanche/trigger_and_size.csv")df_all_other.to_csv("../data/clean/CO Snow:Avalanche/all_other_vars.csv")