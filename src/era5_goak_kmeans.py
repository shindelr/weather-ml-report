"""author: Robin Shindelmandate: 2025-02-19"""import pandas as pdimport numpy as npfrom sklearn.cluster import KMeansfrom sklearn.decomposition import PCAimport matplotlib.pyplot as pltdf = pd.read_csv('../data/clean/ERA5/gulf_of_ak_normalized.csv')pressures = df.isobaricInhPadf = df.drop('isobaricInhPa', axis=1)# Visualize in 3D ------------------------------------------------------------fig = plt.figure(figsize=(5, 5))ax = fig.add_subplot(projection='3d')scatter_plot = ax.scatter(df.t, df.d, df.cswc, c=df.t, cmap='viridis', s=1, alpha=0.4)cbar = fig.colorbar(scatter_plot, ax=ax, shrink=0.5, aspect=10, location='left')cbar.set_label('Temperature (K)')plt.title('3D plot of Temperature, Divergence, and Cloud Snow Water Content')plt.xlabel('Temperature')plt.ylabel('Divergence')ax.set_zlabel('Cloud Snow Water Content')plt.show()# PCA ------------------------------------------------------------------------pca = PCA(n_components=2)df_reduced = pca.fit_transform(df)# KMEANS ---------------------------------------------------------------------ks = [2, 3, 4]# fake_point = np.array([[0.482371, 0.673214, 0.023453, 0.512987, 0.618472, 0.473912, 0.398745]])fake_point = np.array([[-1.2354, 0.9823]])for k in ks:    mod = KMeans(n_clusters=k)    fitted = mod.fit(df_reduced)    labels = fitted.labels_    centroids = fitted.cluster_centers_    print('\n')    print(f'-------------------- KMeans, k={k} ---------------------')    print(f'Cluster centers: \n{centroids}')    print(f'Labels: {labels}')    print(f'Predicting on fake point: {fitted.predict(fake_point)}')    print('Creating plot!')        plt.figure(figsize=(10, 8))        title_str = f'Clustering on 2 PCA Components and k={k}'    plt.title(title_str)    plt.scatter(x=df_reduced[:, 0], y=df_reduced[:, 1], c=labels, alpha=0.45, s=1)    plt.scatter(x=centroids[:, 0], y=centroids[:, 1], c='red', s=200)    plt.show()        print('---------------------------------------------------------\n')